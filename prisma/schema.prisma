// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  fullName   String
  email      String   @unique
  hash       String
  gender     Gender   @default(male)
  role       Role     @default(customer)
  birthDate  DateTime
  totalPoint Int      @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  products Product[]
  payments Payment[]

  @@map("users")
}

model Product {
  id Int @id @default(autoincrement())

  name        String
  type        String
  price       Int
  description String
  point       Int

  userId Int
  // paymentId Int

  user User @relation(fields: [userId], references: [id])
  // payment Payment @relation(fields: [paymentId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  // Payment   Payment? @relation(fields: [paymentId], references: [id])
  // paymentId Int?
  // Payment   Payment? @relation(fields: [paymentId], references: [id])
  // paymentId Int?
  @@map("products")
}

model Payment {
  id Int @id @default(autoincrement())

  // Heading
  logo    String
  hotline String
  socmed  String

  // Cashier
  bill_no String
  cashier String
  hour    DateTime @default(now())

  // Products
  product_name String
  qty          Int
  price        Int

  // Total
  total_qty   Int
  total_price Int
  total_card  Int

  userId Int
  user   User @relation(fields: [userId], references: [id])

  // products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("payments")
}

enum Gender {
  male
  female
}

enum Role {
  admin
  cashier
  customer
}
